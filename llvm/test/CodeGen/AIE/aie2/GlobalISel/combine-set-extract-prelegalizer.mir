# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2024 Advanced Micro Devices, Inc. or its affiliates
# RUN: llc -mtriple aie2 -run-pass=aie2-prelegalizer-combiner -combine-256-to-512-set-extract=true %s -verify-machineinstrs -o - | FileCheck %s

---
name:            set-extract-I128
legalized:       false
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: set-extract-I128
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s32>)
    %0:_(<16 x s32>) = COPY $x0
    %1:_(<4 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.extract.I128.I512), %0(<16 x s32>)
    %2:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.set.I512.I128), %1(<4 x s32>)
    PseudoRET implicit $lr, implicit %2
...

---
name:            set-extract-I256
legalized:       false
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: set-extract-I256
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s32>)
    %0:_(<16 x s32>) = COPY $x0
    %1:_(s32) = G_CONSTANT i32 0
    %2:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %0(<16 x s32>), %1(s32)
    %3:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.set.I512.I256), %2(<8 x s32>), %1(s32)
    PseudoRET implicit $lr, implicit %3
...

---
name:            set-extract-I256_different_reg_same_idx
legalized:       false
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: set-extract-I256_different_reg_same_idx
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[COPY]](<16 x s32>)
    %0:_(<16 x s32>) = COPY $x0
    %1:_(s32) = G_CONSTANT i32 0
    %10:_(s32) = G_CONSTANT i32 0
    %2:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %0(<16 x s32>), %1(s32)
    %3:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.set.I512.I256), %2(<8 x s32>), %10(s32)
    PseudoRET implicit $lr, implicit %3
...

---
name:            set-extract-I256_different_idx
legalized:       false
body:             |
  bb.1.entry:
    liveins: $x0
    ; CHECK-LABEL: name: set-extract-I256_different_idx
    ; CHECK: liveins: $x0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(<16 x s32>) = COPY $x0
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[INT:%[0-9]+]]:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), [[COPY]](<16 x s32>), [[C]](s32)
    ; CHECK-NEXT: [[INT1:%[0-9]+]]:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.set.I512.I256), [[INT]](<8 x s32>), [[C1]](s32)
    ; CHECK-NEXT: PseudoRET implicit $lr, implicit [[INT1]](<16 x s32>)
    %0:_(<16 x s32>) = COPY $x0
    %1:_(s32) = G_CONSTANT i32 0
    %10:_(s32) = G_CONSTANT i32 1
    %2:_(<8 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.ext.I256.I512), %0(<16 x s32>), %1(s32)
    %3:_(<16 x s32>) = G_INTRINSIC intrinsic(@llvm.aie2.set.I512.I256), %2(<8 x s32>), %10(s32)
    PseudoRET implicit $lr, implicit %3
...
